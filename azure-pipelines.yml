# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: 'DevDeploy'
    variables: 
      environment: Siri
    jobs:
      - job: Devjob
        steps:
          - bash: echo Devjob
          - bash: echo $(PipelinelevelVariable)
          - bash: echo $(environment)
          - bash: echo $(Build.BuildNumber)
          - bash: echo $(Build.BuildId)
          - bash: echo $(Build.SourceBranchName)
          - bash: echo $(Build.SourcesDirectory)
          - bash: echo $(System.DefaultWorkingDirectory)
          - bash: ls -R $(System.DefaultWorkingDirectory)
          - bash: echo $(Build.ArtifactStagingDirectory)
          - bash: java -version
          - bash: python --version
          - bash: node --version
          - bash: mvn --version
          - bash: ls -R $(Build.ArtifactStagingDirectory)
          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)'
              Contents: |
                **/*.yaml
                **/*.tf
              TargetFolder: '$(Build.ArtifactStagingDirectory)'
          - bash: ls -R $(Build.ArtifactStagingDirectory)
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'myArtifacts'
              publishLocation: 'Container'

      # - job: Devjob2
      #   dependsOn: Devjob
      #   steps:
      #     - bash: echo Devjob2
 
  # - stage: 'QADeploy'
  #   dependsOn: DevDeploy
  #   jobs:
  #     - job: QAJob
  #       steps:
  #         - bash: echo QAJob
  # - stage: "ProdDeploy"
  #   jobs:
  #     - job: Prodjob
  #       steps:
  #         - bash: echo Prodjob



